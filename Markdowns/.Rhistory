str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$"))
anno_tab <- read_csv("../../../data/processed/multiple_sequence_alignment/OMA_data/lineage_info_from_uniprot_db_v1.0.csv") %>%
mutate(class_info = case_when(
str_detect(lineage, "Fungi") ~ "Fungi",
str_detect(lineage, "Viridiplantae") ~ "Plant",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Arthropoda") ~ "Arthropoda",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Actinopterygii") ~ "Fish",
str_detect(lineage, "Nematoda") ~ "Nematoda",
str_detect(lineage, "Platyhelminthes") ~ "Platyhelminthes",
str_detect(lineage, "Filasterea") ~ "Filasterea",
str_detect(lineage, "Sar") ~ "Sar",
str_detect(lineage, "Apusozoa") ~ "Apusozoa",
str_detect(lineage, "Coleoidea") ~ "Coleoidea",
str_detect(lineage, "Amoebozoa") ~ "Amoebozoa",
str_detect(lineage, "Discoba") ~ "Discoba",
str_detect(lineage, "Chondrichthyes") ~ "Cartilaginous fishes",
str_detect(lineage, "Archelosauria") ~ "Archelosauria",
str_detect(lineage, "Lepidosauria") ~ "lizards and snakes",
str_detect(lineage, "Echinodermata") ~ "Echinodermata",
str_detect(lineage, "Cephalochordata") ~ "Cephalochordata",
str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$")) %>%
mutate(sci_name = str_remove(sci_name, " f circinelloides ."))
fa_data <- read.fasta("../../../data/processed/multiple_sequence_alignment/OMA_data/HUMAN30465_orthologs_with_human_seq_clean_names_v2.0.fa",
seqtype = "AA", whole.header = FALSE)
ids <- names(fa_data)
anno_tab <- read_csv("../../../data/processed/multiple_sequence_alignment/OMA_data/lineage_info_from_uniprot_db_v1.0.csv") %>%
mutate(class_info = case_when(
str_detect(lineage, "Fungi") ~ "Fungi",
str_detect(lineage, "Viridiplantae") ~ "Plant",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Arthropoda") ~ "Arthropoda",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Actinopterygii") ~ "Fish",
str_detect(lineage, "Nematoda") ~ "Nematoda",
str_detect(lineage, "Platyhelminthes") ~ "Platyhelminthes",
str_detect(lineage, "Filasterea") ~ "Filasterea",
str_detect(lineage, "Sar") ~ "Sar",
str_detect(lineage, "Apusozoa") ~ "Apusozoa",
str_detect(lineage, "Coleoidea") ~ "Coleoidea",
str_detect(lineage, "Amoebozoa") ~ "Amoebozoa",
str_detect(lineage, "Discoba") ~ "Discoba",
str_detect(lineage, "Chondrichthyes") ~ "Cartilaginous fishes",
str_detect(lineage, "Archelosauria") ~ "Archelosauria",
str_detect(lineage, "Lepidosauria") ~ "lizards and snakes",
str_detect(lineage, "Echinodermata") ~ "Echinodermata",
str_detect(lineage, "Cephalochordata") ~ "Cephalochordata",
str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$")) %>%
mutate(sci_name = str_remove(sci_name, " f circinelloides ."))
full_header <- map_chr(fa_data, attr, "Annot") %>%
tibble(head_name=.) %>%
mutate(Accession = str_remove(head_name, ">"))
View(full_header)
anno_tab <- read_csv("../../../data/processed/multiple_sequence_alignment/OMA_data/lineage_info_from_uniprot_db_v1.0.csv") %>%
mutate(class_info = case_when(
str_detect(lineage, "Fungi") ~ "Fungi",
str_detect(lineage, "Viridiplantae") ~ "Plant",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Arthropoda") ~ "Arthropoda",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Actinopterygii") ~ "Fish",
str_detect(lineage, "Nematoda") ~ "Nematoda",
str_detect(lineage, "Platyhelminthes") ~ "Platyhelminthes",
str_detect(lineage, "Filasterea") ~ "Filasterea",
str_detect(lineage, "Sar") ~ "Sar",
str_detect(lineage, "Apusozoa") ~ "Apusozoa",
str_detect(lineage, "Coleoidea") ~ "Coleoidea",
str_detect(lineage, "Amoebozoa") ~ "Amoebozoa",
str_detect(lineage, "Discoba") ~ "Discoba",
str_detect(lineage, "Chondrichthyes") ~ "Cartilaginous fishes",
str_detect(lineage, "Archelosauria") ~ "Archelosauria",
str_detect(lineage, "Lepidosauria") ~ "lizards and snakes",
str_detect(lineage, "Echinodermata") ~ "Echinodermata",
str_detect(lineage, "Cephalochordata") ~ "Cephalochordata",
str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$")) %>%
mutate(sci_name = str_remove(sci_name, " f circinelloides .")) %>%
mutate(new_head_name = str_c(">", Accession , sep=""))
anno_tab <- read_csv("../../../data/processed/multiple_sequence_alignment/OMA_data/lineage_info_from_uniprot_db_v1.0.csv") %>%
mutate(class_info = case_when(
str_detect(lineage, "Fungi") ~ "Fungi",
str_detect(lineage, "Viridiplantae") ~ "Plant",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Arthropoda") ~ "Arthropoda",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Actinopterygii") ~ "Fish",
str_detect(lineage, "Nematoda") ~ "Nematoda",
str_detect(lineage, "Platyhelminthes") ~ "Platyhelminthes",
str_detect(lineage, "Filasterea") ~ "Filasterea",
str_detect(lineage, "Sar") ~ "Sar",
str_detect(lineage, "Apusozoa") ~ "Apusozoa",
str_detect(lineage, "Coleoidea") ~ "Coleoidea",
str_detect(lineage, "Amoebozoa") ~ "Amoebozoa",
str_detect(lineage, "Discoba") ~ "Discoba",
str_detect(lineage, "Chondrichthyes") ~ "Cartilaginous fishes",
str_detect(lineage, "Archelosauria") ~ "Archelosauria",
str_detect(lineage, "Lepidosauria") ~ "lizards and snakes",
str_detect(lineage, "Echinodermata") ~ "Echinodermata",
str_detect(lineage, "Cephalochordata") ~ "Cephalochordata",
str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$")) %>%
mutate(sci_name = str_remove(sci_name, " f circinelloides .")) %>%
mutate(new_head_name = str_c(">", Accession , sep="")) %>%
mutate(new_head_name = str_c(new_head_name, sci_name ,class_info, sep="_"))
anno_tab <- read_csv("../../../data/processed/multiple_sequence_alignment/OMA_data/lineage_info_from_uniprot_db_v1.0.csv") %>%
mutate(class_info = case_when(
str_detect(lineage, "Fungi") ~ "Fungi",
str_detect(lineage, "Viridiplantae") ~ "Plant",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Arthropoda") ~ "Arthropoda",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Actinopterygii") ~ "Fish",
str_detect(lineage, "Nematoda") ~ "Nematoda",
str_detect(lineage, "Platyhelminthes") ~ "Platyhelminthes",
str_detect(lineage, "Filasterea") ~ "Filasterea",
str_detect(lineage, "Sar") ~ "Sar",
str_detect(lineage, "Apusozoa") ~ "Apusozoa",
str_detect(lineage, "Coleoidea") ~ "Coleoidea",
str_detect(lineage, "Amoebozoa") ~ "Amoebozoa",
str_detect(lineage, "Discoba") ~ "Discoba",
str_detect(lineage, "Chondrichthyes") ~ "Cartilaginous fishes",
str_detect(lineage, "Archelosauria") ~ "Archelosauria",
str_detect(lineage, "Lepidosauria") ~ "lizards and snakes",
str_detect(lineage, "Echinodermata") ~ "Echinodermata",
str_detect(lineage, "Cephalochordata") ~ "Cephalochordata",
str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$")) %>%
mutate(sci_name = str_remove(sci_name, " f circinelloides .")) %>%
mutate(new_head_name = str_c(">", Accession , sep="")) %>%
mutate(new_head_name = str_c(new_head_name, sci_name ,class_info, sep="_")) %>%
mutate(new_head_name = str_replace_all(new_head_name, " ", "_"))
full_header <- map_chr(fa_data, attr, "Annot") %>%
tibble(head_name=.) %>%
mutate(Accession = str_remove(head_name, ">"))
full_header <- map_chr(fa_data, attr, "Annot") %>%
tibble(head_name=.) %>%
mutate(Accession = str_remove(head_name, ">")) %>%
write_csv(x=full_header, file="../../../data/processed/multiple_sequence_alignment/OMA_data/seq_ids_and_scientific_names_table_v1.0.csv")
full_header <- map_chr(fa_data, attr, "Annot") %>%
tibble(head_name=.) %>%
mutate(Accession = str_remove(head_name, ">"))
full_header_ori <- full_header
head(anno_tab)
full_header <- left_join(full_header, anno_tab, by="Accession")
View(full_header)
View(full_header_ori)
names(fa_data)
names(fa_data) <- full_header$new_head_name
fa_data
names(fa_data)
write.fasta(sequences=fa_data, nbchar = 1000000, names= names(fa_data), file.out="../../../data/processed/multiple_sequence_alignment/OMA_data/HUMAN30465_orthologs_with_human_seq_manually_edited_with_lineage.fa")
source("~/ServersSpace/scratchb/projects/external/20231013_KhoronenkovaS_EX_phylogeny/code/multiple_sequence_alignment/OMA_data_analysis/add_classification_info_to_fasta_v1.0.R")
rm(list=ls())
source("~/ServersSpace/scratchb/projects/external/20231013_KhoronenkovaS_EX_phylogeny/code/multiple_sequence_alignment/OMA_data_analysis/add_classification_info_to_fasta_v1.0.R")
anno_tab <- read_csv("../../../data/processed/multiple_sequence_alignment/OMA_data/lineage_info_from_uniprot_db_v1.0.csv") %>%
mutate(class_info = case_when(
str_detect(lineage, "Fungi") ~ "Fungi",
str_detect(lineage, "Viridiplantae") ~ "Plant",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Arthropoda") ~ "Arthropoda",
str_detect(lineage, "Mammalia") ~ "Mammalia",
str_detect(lineage, "Actinopterygii") ~ "Fish",
str_detect(lineage, "Nematoda") ~ "Nematoda",
str_detect(lineage, "Platyhelminthes") ~ "Platyhelminthes",
str_detect(lineage, "Filasterea") ~ "Filasterea",
str_detect(lineage, "Sar") ~ "Sar",
str_detect(lineage, "Apusozoa") ~ "Apusozoa",
str_detect(lineage, "Coleoidea") ~ "Coleoidea",
str_detect(lineage, "Amoebozoa") ~ "Amoebozoa",
str_detect(lineage, "Discoba") ~ "Discoba",
str_detect(lineage, "Chondrichthyes") ~ "Cartilaginous fishes",
str_detect(lineage, "Archelosauria") ~ "Archelosauria",
str_detect(lineage, "Lepidosauria") ~ "lizards and snakes",
str_detect(lineage, "Echinodermata") ~ "Echinodermata",
str_detect(lineage, "Cephalochordata") ~ "Cephalochordata",
str_detect(lineage, "Cnidaria") ~ "Cnidaria",
str_detect(lineage, "Amphibia") ~ "Amphibia",
str_detect(lineage, "Choanoflagellata") ~ "Choanoflagellata",
str_detect(lineage, "Placozoa") ~ "Placozoa",
str_detect(lineage, "Coelacanthiformes") ~ "Fish",
str_detect(lineage, "Spiralia") ~ "Spiralia",
str_detect(lineage, "Rhodophyta") ~ "Rhodophyta",
str_detect(lineage, "Haptista") ~ "Haptista"
)) %>%
mutate(sci_name = str_remove(sci_name, "\\(.*\\)")) %>%
mutate(sci_name = str_remove(sci_name, "\\.")) %>%
mutate(sci_name = str_remove(sci_name, " $")) %>%
mutate(sci_name = str_remove(sci_name, " ATCC 50062")) %>%
mutate(sci_name = str_remove(sci_name, " var .*$")) %>%
mutate(sci_name = str_remove(sci_name, " CBS 27749.")) %>%
mutate(sci_name = str_remove(sci_name, " subsp .*$")) %>%
mutate(sci_name = str_remove(sci_name, " f circinelloides .")) %>%
#mutate(new_head_name = str_c(">", Accession , sep="")) %>%
mutate(new_head_name = str_c(Accession, sci_name ,class_info, sep="_")) %>%
mutate(new_head_name = str_replace_all(new_head_name, " ", "_"))
full_header <- map_chr(fa_data, attr, "Annot") %>%
tibble(head_name=.) %>%
mutate(Accession = str_remove(head_name, ">"))
full_header_ori <- full_header
full_header <- left_join(full_header, anno_tab, by="Accession")
write_csv(x=full_header, file="../../../data/processed/multiple_sequence_alignment/OMA_data/uniprot_ids_with_lineage_info_v1.0.csv")
names(fa_data) <- full_header$new_head_name
write.fasta(sequences=fa_data, nbchar = 1000000, names= names(fa_data), file.out="../../../data/processed/multiple_sequence_alignment/OMA_data/HUMAN30465_orthologs_with_human_seq_manually_edited_with_lineage.fa")
setwd("/Users/chilam01/ServersSpace/scratchb/projects/external/20231013_KhoronenkovaS_EX_phylogeny/code/multiple_sequence_alignment/OMA_data_analysis")
library(tidyverse)
library(seqinr)
all_seq <- fa_data <- read.fasta("../../../data/processed/multiple_sequence_alignment/OMA_data/HUMAN30465_orthologs.txt",
seqtype = "AA", whole.header = FALSE)
ids <- names(fa_data)
ids
all_ids <- names(fa_data)
length(all_ids)
length(unique(all_ids))
mann_eduted_seq <- read.fasta("../../../data/processed/multiple_sequence_alignment/OMA_data/HUMAN30465_orthologs_with_human_seq_manually_edited.fa",
seqtype = "AA", whole.header = FALSE)
mann_all_ids <- names(mann_eduted_seq)
mann_ids <- names(mann_eduted_seq)
setdf(mann_all_ids, mann_ids)
setdiff(mann_all_ids, mann_ids)
mann_all_ids
mann_ids
all_ids <- names(fa_data)
mann_eduted_seq <- read.fasta("../../../data/processed/multiple_sequence_alignment/OMA_data/HUMAN30465_orthologs_with_human_seq_manually_edited.fa",
seqtype = "AA", whole.header = FALSE)
mann_ids <- names(mann_eduted_seq)
intersect(all_ids, mann_ids)
length(intersect(all_ids, mann_ids) )
setdiff(all_ids, mann_ids)
length(setdiff(all_ids, mann_ids) )
removed_ids <- tibble(IDs= setdiff(all_ids, mann_ids))
write_tsv(x=removed_ids,
file="../../../data/processed/multiple_sequence_alignment/OMA_data/seq_ids_removed_after_manually_edit.txt",
col_names = F)
setwd("~/Desktop/20240215_AhmedH_EX_fullPro/code/DE_analysis/")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
suppressPackageStartupMessages(library(qPLEXanalyzer))
#suppressPackageStartupMessages(library(sva))
suppressPackageStartupMessages(library(pander))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(gplots))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(DT))
log2_plus_one_tnas <- function(x){
return(log2(x + 1))
}
# get summary
get_no_pep_and_proteins_identified <- function( intensities_data, run='run' ){
int_tab <- Biobase::fData(intensities_data)
no_of_pep <- nrow(int_tab)
no_of_uniq_prot <- length(unique(int_tab$Accessions))
higest_peptides <- as.data.frame(table(int_tab$Accessions) ) %>%
arrange( desc(Freq)) %>%
head(n=1)
prote_with_highest_pep <- as.vector(higest_peptides$Var1)
number_of_peptides <- higest_peptides$Freq
median_peptides <- median(table(int_tab$Accessions) )
tab <- data.frame(Run=run,
Unique_peptides=no_of_pep,
Uniqe_proteins=no_of_uniq_prot,
Median_peptides_per_protein=median_peptides,
Protein_with_highest_peptides=prote_with_highest_pep,
Number_of_peptides=number_of_peptides
)
return(tab)
}
hmMissPlot <- function(MSnObj){
exprs(MSnObj) %>%
as_tibble() %>%
mutate(PeptideID = str_c("Pep", row_number())) %>%
nest(Data = where(is.numeric)) %>%
mutate(Filter = Data) %>%
unnest(Filter) %>%
mutate(across(where(is.numeric), is.na)) %>%
rename_with(.cols = where(is.logical), ~str_c("F", .x)) %>%
mutate(MeanInt = map_dbl(Data, rowMeans, na.rm = TRUE)) %>%
arrange(across(c(where(is.logical), MeanInt))) %>%
select(Data) %>%
unnest(Data) %>%
rowid_to_column("Ord") %>%
pivot_longer(names_to = "Sample", values_to = "Intensity", -Ord) %>%
mutate(Intensity=log10(Intensity)) %>%
ggplot(aes(x=Sample, y=Ord)) +
geom_tile(aes(fill=Intensity)) +
scale_fill_continuous(na.value = 'white') +
labs(y=NULL, fill="log(Intensity)") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0))
}
get_contrasts_from_groups <- function(groups){
cont_names <- c()
contrasts <- c()
for(x in 1:length(groups)){
if ( x != length(groups)){
for( y in (x+1):length(groups)){
#cat( x, '==', y, '\n')
g1 <- groups[x]
g2 = groups[y]
cont_names <- c(cont_names, str_c(g1, 'vs', g2, sep='_'))
contrasts <- c(contrasts, c( str_c(g1, '-', g2, sep=' ')))
}
}
}
names(contrasts) <- cont_names
return(contrasts)
}
catHeader <- function(text = "", level = 3, is_tabset=FALSE) {
if(is_tabset){
cat(paste0("\n\n",
paste(rep("#", level), collapse = ""),
" ", text,' {.tabset}', "\n"))
}else{
cat(paste0("\n\n",
paste(rep("#", level), collapse = ""),
" ", text, "\n"))
}
}
get_de_results_plots_tabs <- function(contrasts, diffstats, de_out_path){
if( !dir.exists(de_out_path)){
dir.create(de_out_path)
}
sig_up_proteins <- c()
sig_down_proteins <- c()
total_sig_proteins <- c()
for (i in 1:length(contrasts))
{
tab_title <- contrasts[i] %>%
names() %>%
str_replace_all(., '_', ' ')
# print tab title
catHeader(text = tab_title, level = 3, is_tabset = TRUE)
diffRes <- getContrastResults(diffstats=diffstats,
contrast=contrasts[i],
transform = FALSE,
writeFile= FALSE) %>%
arrange(adj.P.Val)
#left_join( .,sim_rime, by="Accessions")
toplot <- diffRes$Accessions[diffRes$adj.P.Val < 0.05]
if(length(toplot) > 20){
toplot <- toplot[1:20]
}
# MA plot
catHeader(text = 'MA plot', level = 4, is_tabset = FALSE)
print(maVolPlot(diffstats,
contrast = contrasts[i],
plotType="MA", title= contrasts[i],
selectedGenes = toplot,
lfcCutOff = 0,
fdrCutOff=0.05))
# Volcano plot
catHeader(text = 'Volcano plot', level = 4, is_tabset = FALSE)
print(maVolPlot(diffstats,
contrast = contrasts[i],
plotType="Volcano", title= contrasts[i],
lfcCutOff = 0,
selectedGenes = toplot,
fdrCutOff=0.05))
# p-value distribution plot
catHeader(text = 'p-value distribution', level = 4, is_tabset = FALSE)
hist(diffRes$P.Value, breaks = 20, main="p-value distribution",
xlab="P.Value")
# DE table
catHeader(text = 'Top hits table', level = 4, is_tabset = FALSE)
print(htmltools::tagList(datatable(head(diffRes, n=20), style='bootstrap') ))
# write output file
outfile <- str_c(de_out_path,
str_c(str_replace_all(tab_title, ' ',  '_'), 'csv', sep='.' ),
sep='/')
write_csv(x=diffRes, file = outfile)
sig_up_proteins <- c(sig_up_proteins, sum(diffRes$adj.P.Val < 0.05 & diffRes$log2FC > 0 ))
sig_down_proteins <- c(sig_down_proteins, sum(diffRes$adj.P.Val < 0.05 & diffRes$log2FC < 0 ))
total_sig_proteins <- c(total_sig_proteins, sum(diffRes$adj.P.Val < 0.05))
}
summary_tab <- tibble(contrast_name = contrasts,
total_prot = nrow(diffRes),
sig_up_proteins= sig_up_proteins,
sig_down_proteins = sig_down_proteins,
total_sig_proteins = total_sig_proteins)
return(summary_tab)
}
read_peptide_intensities <- function(pep_int_file, s_sheet){
int_tab <- read.csv( file=pep_int_file, stringsAsFactors = F) %>%
select( -Modifications) %>%
filter(Protein_Groups  == 1 ) %>%
filter(Proteins == 1 ) %>%
select(-Protein_Groups, -Proteins ) %>%
dplyr::filter(!is.na(Accessions)) %>%
mutate(total_NA_count = rowSums(is.na(dplyr::select(., s_sheet$SampleName)))) %>% # get NS count for each row
dplyr::filter( total_NA_count != nrow(s_sheet)) %>%
dplyr::select(Sequence,Accessions, one_of(s_sheet$SampleName))
end_col <- 2 + nrow(s_sheet)
MSnset_data <- convertToMSnset(int_tab,
metadata=s_sheet,
indExpData=c(3:end_col),
Sequences=1, Accessions=2,
rmMissing=TRUE)
return(MSnset_data)
}
#int_genes <- c("SGK1")
outliers <- c("T1KO_T2KO_15uM_1")
# read sample sheets
s_sheet_1 <- read_csv( file='../../data/processed/sample_sheet_set1_v1.0.csv')
# read sample sheets
s_sheet_1 <- read_csv( file='../../data/processed/sample_sheet_set1_v1.0.csv')
s_sheet_2 <- read_csv( file='../../data/processed/sample_sheet_set2_v1.0.csv')
s_sheet_3 <- read_csv( file='../../data/processed/sample_sheet_set3_v1.0.csv') %>%
dplyr::filter()
s_sheet_3$SampleName
# read sample sheets
s_sheet_1 <- read_csv( file='../../data/processed/sample_sheet_set1_v1.0.csv')
s_sheet_2 <- read_csv( file='../../data/processed/sample_sheet_set2_v1.0.csv')
s_sheet_3 <- read_csv( file='../../data/processed/sample_sheet_set3_v1.0.csv') %>%
dplyr::filter( !SampleName %in% outliers)
dim(s_sheet_3)
setwd("~/Documents/github/Bitesize_SingleCell_2024/Bitesize_SingleCell_2024/Markdowns/")
getwd()
rm(list=ls())
